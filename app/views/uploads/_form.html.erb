<%= form_for(upload, :html => { :multipart => true }, :remote => true) do |f| %>
  <% if upload.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(upload.errors.count, "error") %> prohibited this upload from being saved:</h2>

      <ul>
      <% upload.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="form-group">
    <%= f.label :title, class: "form-text text-muted" %>
    <%= f.text_field :title, class: "form-control" %>
  </div>

  <div class="form-group">
    <%= f.label :description, class: "form-text text-muted" %>
    <%= f.text_area :description, class: "form-control" %>
  </div>

  <div class="form-group">
    <%= f.label :file, class: "form-text text-muted" %>
    <%= f.file_field :file, class: "form-control-file" %>
  </div>


  <div class="progress-wrapper">
    <div class="progress">
      <div class="progress-bar" role="progressbar">
        0%
      </div>
    </div>
  </div>

  <div class="actions">
    <%= f.submit "Save Upload", class: "btn btn-primary" %>
  </div>
<% end %>


<script type="text/javascript">
  $(document).ready(function() {
    var uploadForm = $('#new_upload');
    uploadForm.fileupload({
      dataType: 'script',
      add: function (e, data) {
        types = /(\.|\/)(gif|jpe?g|png|bmp)$/i;
        file = data.files[0];
        if (types.test(file.type) || types.test(file.name)) {
          data.submit();
        }
        else { alert(file.name + " must be GIF, JPEG, BMP or PNG file"); }
      }
    });

    var wrapper = uploadForm.find('.progress-wrapper');
    var progress_bar = wrapper.find('.progress-bar');

    uploadForm.bind('fileuploadstart', function() {
      console.log("1");
      wrapper.show();

    });

    uploadForm.bind('fileuploaddone', function() {
      console.log("2")
      wrapper.hide();
      progress_bar.width(0); // Revert progress bar's width back to 0 for future uploads

    });

    uploadForm.bind('fileuploadprogressall', function (e, data) {
      console.log("3")
      var progress = parseInt(data.loaded / data.total * 100, 10);

      progress_bar.css('width', progress + '%').text(progress + '%');

    });
  });
</script>
